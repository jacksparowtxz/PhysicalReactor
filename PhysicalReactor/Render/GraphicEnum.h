#pragma once

//Deferredcontext
enum GRAPHICSTHREAD
{
	GRAPHICTHREAD_IMMERIATE,
	GRAPHICTHREAD_REFLECTIONS,
	GRAPHICTHREAD_SCENE,
	GRAPHICTHREAD_MISC1,
	GRAPHICSTHREAD_MISC2,
	GRAPHICSTHREAD_MISC3,
	GRAPHICSTHREAD_COUNT
};

enum RENDERTYPE
{
	RENDERTYPE_VOID = 0,
    RENDERTYPE_SURFACE=1,
	RENDERTYPE_DEFERREDECAL=2,
	RENDERTYPE_LIGHTFUNCTION=3,
	RENDERTYPE_VOLUME=4,
	RENDERTYPE_POSTPORCESS=5,
	RENDERTYPE_UI=6,
};

enum BLENDMODE
{
	BLEND_VOID=0,
	BLEND_OPAQUE=1,
	BLEND_MASKED=2,
	BLEND_TRANSLUCENT=3,
	BLEND_ADDITIVE=4,
	BLEND_MODULATE=5,
	BLEND_ALPHACOMPOSITE=6,
};

enum SHADINGMODEL
{
	SHADINGMODEL_UNLIT=1,
	SHADINGMODEL_DEFAULTUNLIT=2,
	SHADINGMODEL_SUBSURFACE=3,
	SHADINGMODEL_PREINTEGRATEDSKIN=4,
	SHADINGMODEL_CLEARCOAT=5,
	SHADINGMODEL_SUBSURFACEPROFILE=6,
	SHADINGMODEL_TWOSIDEDFOLIAGE=7,
	SHADINGMODEL_HAIR=8,
	SHADINGMODEL_CLOTH=7,
	SHADINGMODEL_EYE=9,
};

enum DecalBlendMode
{
	Decal_Translucent=1,
	Decal_Stain=2,
	Decal_Normal=3,
	Decal_Emissive=4,
	Decal_DBuffer_Translucent_Color_Normal_Rougness=5,
	Decal_DBuffer_Translucent_Color=6,
	Decal_DBuffer_Translucent_Color_Normal=7,
	Decal_DBuffer_Translucent_Color_Rougness=8,
	Decal_DBuffer_Translucent_Normal=9,
	Decal_DBuffer_Translucent_Normal_Rougness=10,
	Decal_DBuffer_Rougness=11,
	Decal_Volumetric_Distance_Function=12,
};

enum Tessellation
{
	No_Tessellation=0,
    Flat_Tessellation=1,
	PN_Tessellation=2,
};
enum SHADERTYPE
{
	SHADERTYPE_TEXTURE,
	SHADERTYPE_DEFERRED,
	SHADERTYPE_FORWARD,
	SHADERTYPE_TILEDFORWARD,
	SHADERTYPE_DEPTHONLY,
	SHADERTYPE_ENVMAPCAPTURE,
	SHADERTYPE_SHADOW,
	SHADERTYPE_SHADOWCUBE,
	SHADERTYPE_VOXELIZE,
	SHADERTYPE_COUNT

};

enum STENCILREF
{
	STENCILREF_EMPTY = 0x00,
	STENCILREF_SKY = 0x01,
	STENCILREF_DEFAULT = 0x02,
	STENCILREF_TRANSPARENT = 0x03,
	STENCILREF_CHARACTER=0x04,
	STENCILREF_SHADELESS=0x05,
	STENCILREF_SKIN=0x06,
	STEMCILREF_LAST=0x0F
};

//const buffers
enum CBTYPES
{
	CBTYPE_WORLD,
	CBTYPE_FRAME,
	CBTYPE_CAMERA,
	CBTYPE_MISC,
	CBTYPE_VOLUMELIGHT,
	CBTYPE_DECAL,
	CBTYPE_CUBEMAPRENDER,
	CBTYPE_API,
	CBTYPE_TESSELLATION,
	CBTYPE_DISPATCHPARAMS,
	CBTYPE_CLOUDGENERATOR,
	CBTYPE_BVH,
	CBTYPE_RAYTARCE,
	CBTYPE_MIPGEN,
	CBTYPE_FILTERENVMAP,
	CBTYPE_COPYEXTURE,
	CBTYPE_LAST
};
//RESOURCE BUFFER
enum RBTYPES
{
	RBTYPE_ENTITYARRAY,
	RBTYPE_ENTITYNDEXLIST_OPAQUE,
	RBTYPE_ENTITYNDEXLIST_TRANSPARENT,
	RBTYPE_VOXELSCENE,
	RBTYPE_MATRIXARRAY,
	RBTYPE_LAST,
};

//TEXTURE
enum TEXTYPES
{
	TEXTYPE_2D_DEBUGUAV,
	TEXTYPE_2D_TILEDDEFERRED_DIFFUSEUAV,
	TEXTYPE_2D_TILEDDEFERRED_SPECULARUAV,
	TEXTYPE_3D_VOXELRADIANCE,
	TEXTYPE_3D_VOXELRADIANCE_HELPER,
	TEXTYPE_2D_CLOUDS,
	TEXTYPE_CUBEARRAY_ENVMAPARRAY,
	TEXTYPE_LAST
};
//VERTEX SHADER
enum VSTYPES
{
	VSTYPES_NULL,
	VSTYPES_OBJECT_DEBUG,
	VSTYPES_OBJECT_COMMON,
	VSTYPES_OBJECT_SIMPLE,
	VSTYPES_OBJECT_POSITIONSTREAM,
	VSTYPES_OBJECT_COMMON_TESSELLATION,
	VSTYPES_OBJECT_SIMPLE_TESSELLATION,
	VSTYPE_SHADOW,
	VSTYPE_SHADOW_ALPHATEST,
	VSTYPE_SHADOW_TRANSPARENT,
	VSTYPE_SHADOWCUBEMAPREDNER,
	VSTYPE_SHADOWCUBEMAPRENDER_ALPHATEST,
	VSTYPE_LINE,
	VSTYPE_TRAIL,
	VSTYPE_WATER,
	VSTYPE_DIRLIGHT,
	VSTYPE_POINTLIGHT,
	VSTYPE_SPOTLIGHT,
	VSTYPE_LIGHTVISUALIZER_SPOTLIGHT,
	VSTYPE_LIGHTVISUALIZER_POINTLIGHT,
	VSTYPE_LIGHTVISUALIZER_SPHERELIGHT,
	VSTYPE_LIGHTVISUALIZER_DISCLIGHT,
	VSTYPE_LIGHTVISYALIZER_RECTANGLELIGHT,
	VSTYPE_LIGHTVISYALIZER_TUBELIGHT,
	VSTYPE_SKY,
	VSTYPE_DECAL,
	VSTYPE_ENVMAP,
	VSTYPE_ENVMAP_SKY,
	VSTYPE_SPHERE,
	VSTYPE_CUBE,
	VSTYPE_VOXELIZER,
	VSTYPE_VOXEL,
	VSTYPE_FORCEFIELDVISUALIZER_POINT,
	VSTYPE_FORCEFIELDVISUALIZER_PLANE,
	VSTYPE_LAST
};
//PIXEL SHADER
enum PSTYPES
{
	 PSTYPE_NULL,
	 PSTYPE_OBJECT_DEFERRED,
	 PSTYPE_OBJECT_DEFERRED_NORMALMAP,
	 PSTYPE_OBJECT_DEFERRED_POM,
	 PSTYPE_OBJECT_DEFERRED_NORMALMAP_POM,

	 PSTYPE_OBJECT_FORWARD,
	 PSTYPE_OBJECT_FORWARD_NORMALMAP,
	 PSTYPE_OBJECT_FORWARD_TRANSPARENT,
	 PSTYPE_OBJECT_FORWARD_TRANSPARENT_NORMALMAP,
	 PSTYPE_OBJECT_FORWARD_PLANARREFLECTION,
	 PSTYPE_OBJECT_FORWARD_NORMALMAP_PLANARREFLECTION,
	 PSTYPE_OBJECT_FORWARD_TRANSPARENT_PLANARREFLECTION,
	 PSTYPE_OBJECT_FORWARD_POM,
	 PSTYPE_OBJECT_FORWARD_NORMALMAP_POM,
	 PSTYPE_OBJECT_FORWARD_TRANSPARENT_POM,
	 PSTYPE_OBJECT_FORWARD_TRANSPARENT_NORMALMAP_POM,
	 PSTYPE_OBJECT_FORWARD_WATER,

	 PSTYPE_OBJECT_TILEDFORWARD,
	 PSTYPE_OBJECT_TILEDFORWARD_NORMALMAP,
	 PSTYPE_OBJECT_TILEDFORWARD_TRANSPARENT,
	 PSTYPE_OBJECT_TILEDFORWARD_TRANSPARNET_NORMALMAP,
	 PSTYPE_OBJECT_TILEDFORWARD_PLANARREFLECTION,
	 PSTYPE_OBJECT_TILEDFORWARD_NORMALMAP_PLANARREFLECTION,
	 PSTYPE_OBJECT_TILEDFORWARD_TRANSPARENT_PLANARREFLECTION,
	 PSTYPE_OBEJCT_TILEDFORWARD_TRANSPARENT_NORMALMAP_PLANARREFLECTION,
	 PSTYPE_OBJECT_TILEDFORWARD_POM,
	 PSTYPE_OBJECT_TILEDFPRWARD_NORMALMAP_POM,
	 PSTYPE_OBJECT_TILEDFORWARD_TRANSPARNET_POM,
	 PSTYPE_OBJECT_TILEDFORWARD_TRANSPARENT_NORMALMAP_POM,
	 PSTYPE_OBJECT_TILEDFORWARD_WATER,

	 PSTYPE_OBJECT_HOLORAM,

	 PSTYPE_OBJECT_DEBUG,
	 PSTYPE_OBJECT_SIMPLEST,
	 PSTYPE_OBJECT_BLACKOUT,
	 PSTYPE_OBJECT_TEXTUREONLY,
	 PSTYPE_OBJECT_ALPHATESTONLY,

	 PSTYPE_SHADOW_ALPHATEST,
	 PSTYPE_SHADOW_TRANSPARENT,
	 PSTYPE_SHADOW_WATER,

	 PSTYPE_LINE,
	 PSTYPE_TRAIL,
	 PSTYPE_ENVIROMENTALLIGHT,
	 PSTYPE_DIRLIGHT,
	 PSTYPE_POINTLIGHT,
	 PSTYPE_SPOTLIGHT,
	 PSTYPE_SPHERELIGHT,
	 PSTYPE_DISCLIGHT,
	 PSTYPE_RECTANGLELIGHT,
	 PSTYPE_TUBELIGHT,
	 PSTYPE_LIGHTVISUALLIZER,
	 PSTYPE_VOLUMETRICLIGHT_DIRECTIONAL,
	 PSTYPE_VOLUMETRICLIGHT_POINT,
	 PSTYPE_VOLUMETRICLIGHT_SPOT,
	 PSTYPE_SHADOWCUBEMAPRENDER,
	 PSTYPE_SHADOWCUBEMAPRENDER_ALPHATEST,
	 PSTYPE_DECAL,
	 PSTYPE_SKY_STATIC,
	 PSTYPE_SKY_DYNAMIC,
	 PSTYPE_SUN,
	 PSTYPE_ENVMAP,
	 PSTYPE_ENVMAP_SKY_STATIC,
	 PSTYPE_ENVMAP_SKY_DYNAMIC,
	 PSTYPE_CUBEMAP,
	 PSTYPE_CAPTUREIMPOSTOR,
	 PSTYPE_VOXELIZER,
	 PSTYPE_VOXEL,
	 PSTYPE_FORCEFIELDVISUALZER,
	 PSTYPE_LAST

};

///geometry shader
enum GSTYPES
{
	GSTYPE_NULL,
	GSTYPE_SHADOWCUBEMAPRENDER,
	GSTYPE_SHADOWCUBEMAPRENDER_ALPHATEST,
	GSTYPE_ENVMAP,
	GSTYPE_ENVMAP_SKY,
	GSTYPE_VOXELIZER,
	GSTYPE_VOXEL,
	GSTYPE_LAST
};
//HULL SHADER
enum HSTYPES
{
	HSTYPE_NULL,
	HSTYPE_OBJECT,
	HSTYPE_LAST
};

//domain shader
enum DSTYPES
{
	DSTYPE_NULL,
	DSTYPE_OBJECT,
	DSTYPE_LAST
};

//COMPUTER SHADER
enum CSTYPES
{
	CSTYPES_LUMINANCE_PASS1,
	CSTYPES_LUMINANCE_PASS2,
	CSTYPE_TILEFRUSTUMS,
	CSTYPE_RESOLVEMSAADEPTHSTENCIL,
	CSTYPE_VOXELSCENECOPYCLEAR,
	CSTYPE_VOXELSCENECOPYCLEAR_TEMPORALSMOOTHING,
	CSTYPE_VOXELRADIANCESECONDARYBOUNCE,
	CSTYPE_VOXELCLEARONLYNORMAL,
	CSTYPE_GENERATEMIPCHAIN2D_UNORM4_SIMPLEFILTER,
	CSTYPE_GENERATEMIPCHAIN2D_FLOAT4_SIMPLEFILTER,
	CSTYPE_GENERATEMIPCHAIN2D_UNORM4_GAUSSIAN,
	CSTYPE_GENERATEMIPCHAIN2D_FLOAT4_GAUSSIAN,
	CSTYPE_GENERATEMIPCHAIN3D_UNORM4_SIMPLEFILTER,
	CSTYPE_GENERATEMIPCHAIN3D_FLOAT4_SIMPLEFILTER,
	CSTYPE_GENERATEMIPCHAIN3D_UNORM4_GAUSSIAN,
	CSTYPE_GENERATEMIPCHAIN3D_FLOAT4_GAUSSIAN,
	CSTYPE_GENERATEMIPCHAINCUBE_UNORM4_SIMPLEFILTER,
	CSTYPE_GENERATEMIPCHAINCUBE_FLOAT4_SIMPLEFILTER,
	CSTYPE_GENERATEMIPCHAINCUBEARRAY_UNORM4_SIMPLEFILTER,
	CSTYPE_GENERATEMIPCHAINCUBEARRAY_FLOAT4_SIMPLEFILTER,
	CSTYPE_FILTERENVMAP,
	CSTYPE_COPYTEXTURE2D_UNORM4,
	CSTYPE_COPYTEXTURE2D_UNORM4_BORDEREXPAND,
	CSTYPE_SKINGING,
	CSTYPE_SKINGING_LDS,
	CSTYPE_CLOUDGENERATOR,
	CSTYPE_BVH_RESET,
	CSTYPE_BVH_CLASSIFICATION,
	CSTYPE_BVH_KICKJOBS,
	CSTYPE_BVH_CLUSTERPROCESSOR,
	CSTYPE_BVH_HIHERACHY,
	CSTYPE_BVH_PROPAGATEAABB,
	CSTYPE_BVH_RAYTRACE_CLEAR,
	CSTYPE_BVH_RAYTRACE_LAUNCH,
	CSTYPE_BVH_RAYTRACE_KICKJOB,
	CSTYPE_BVH_RAYTRACE_PRIMARY,
	CSTYPE_BVH_RAYTRACE_LIGHTSAMPLING,
	CSTYPE_LAST
};


//VERTEX LAYOUT
enum VLTYPES
{
	VLTYPE_NULL,
	VLTYPE_OBJECT_DEBUG,
	VLTYPE_OBJECT_POS,
	VLTYPE_OBJECT_POS_TEX,
	VLTYPE_OBJECT_ALL,
	VLTYPE_SHADOW_POS,
	VLTYPE_SHADOW_POS_TEX,
	VLTYPE_LINE,
	VLTYPE_TRAIL,
	VLTYPE_LAST
};

//RASTERIZER STATE
enum RSTYPES
{
	RSTYPE_FRONT,
	RSTYPE_BACK,
	RSTYPE_DOUBLESIDED,
	RSTYPE_WIRE,
	RSTYPE_WIRE_SMMOTH,
	RSTYPE_WIRE_DOUBLESIDED,
	RSTYPE_WIRE_DOUBLESIDED_SMOOTH,
	RSTYPE_SHADOW,
	RSTYPE_SHADOW_DOUBLESIDED,
	RSTYPE_OCCLDEE,
	RSTYPE_VOXELIZE,
	RSTYPE_SKY,
	RSTYPE_LAST
};

//DETPH STECNICL 
enum DSSTYPES
{
	DSSTYPE_DEFAULT,
	DSSTYPE_SHADOW,
	DSSTYPE_XRAY,
	DSSTYPE_DEPTHREAD,
	DSSTYPE_DIRLIGHT,
	DSSTYPE_LIGHT,
	DSSTYPE_DECAL,
	DSSTYPE_STENCILREAD_MATCH,
	DSSTYPE_DEPTHREADEQUAL,
	DSSTYPE_ENVMAP,
	DSSTYPE_LAST
};

//BLEND STATE
enum BSTYPES
{
	BSTYPE_OPAQUE,
	BSTYPE_TRANSPARENT,
	BSTYPE_INVERSE,
	BSTYPE_ADDITIVE,
	BSTYPE_COLORWRITEDISABLE,
	BSTYPE_DEFERREDLIGHT,
	BSTYPE_ENVIRONMENTALLIGHT,
	BSTYPE_DECAL,
	BSTYPE_MULTIPLY,
	BSTYPE_TRANSPARENTSHADOWMAP,
	BSTYPE_LAST
};

// sample states
enum CSSTYPES
{
	SSTYPE_MAXIMUM_CLAMP,
	SSTYPE_LAST
};

